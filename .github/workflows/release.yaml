name: Release

on:
  push:
    tags:
    - v*

env:
  # Golang version to use across CI steps
  GOLANG_VERSION: '1.22'
  SBOM_PATH: sbom.json

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-go:
    name: Build Go
    runs-on: ubuntu-22.04
    permissions:
      # Needs write for the release
      contents: write
      # Attestation
      id-token: write
      attestations: write
    strategy:
      matrix:
        os: [darwin, linux]
        arch: [amd64, arm64]
    env:
      GOARCH: ${{ matrix.arch }}
      GOOS: ${{ matrix.os }}
      BINARY: "ts-${{ matrix.os }}-${{ matrix.arch }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.0.0

      - name: Setup Golang
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Download all Go modules
        run: |
          go mod download

      - name: Build
        run: |
          go build -o "${{ env.BINARY }}"

      - name: Generate SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@efc74245d6802c8cefd925620515442756c70d8f # v2.0.0
        with:
          version: v1
          args: mod -licenses -json -output ${{ env.SBOM_PATH }}

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c # v1.4.3
        with:
          subject-path: ${{ env.BINARY }}
          sbom-path: ${{ env.SBOM_PATH }}

      - name: Upload binary
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release upload "${{ github.ref_name }}" "${{ env.BINARY }}"
